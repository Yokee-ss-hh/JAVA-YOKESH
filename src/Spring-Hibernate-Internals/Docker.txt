1) create war file using "maven package" which create a jar file ion target folder


2) Create a docker file 

FROM OpenJDK:17-jdk-alpine -> Use an official OpenJDK runtime as a parent image

WORKDIR /app -> set a working directory in the container 

COPY target/employeeapplication.jar app.jar -> Copying jar file into container app directory

EXPOSE 8080 -> expose our application port 8080 outside of container 

ENTRYPOINT ["java","-jar","app.jar"] -> Commands to run jar file 


3) Build the docker image 

docker build -t springboot-employee-application:1.0 

-t flag tags the image with name springboot-employee-application and with version 1.0


4) Run the docker image in a container 

docker run -d -p 8080:8080 localhost:5000/springboot-employee-application:1.0

-d indicates detached mode 

-p indicates port

8080:8080 means,
the first port 8080 is the port on the local machine 
the second port 8080 is the port inside the container where application is running 

This makes spring boot application accessible from http://localhost:8080. Requests made to localhost:8080 will be forwarded to port 8080 in the container where the application is listening. 

localhost:5000/springboot-employee-application:1.0

This address is of the docker registry, if we are docker desktop in local, then it is 5000

Finally, if we run this command, it pulls the image from docker registry and runs a container.
